### DEVICE BASE #############################################################
esphome:
  name: esp-weather

esp8266:
  board: d1_mini

ota:
  safe_mode: True

logger:
  level: debug

web_server:

wifi:
  networks:
    # - ssid: SAP-Guest
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

i2c:
  # sda: 21 D2
  # scl: 22 D1
  scan: true
  id: bus_a

time:
  ### INTERNET TIME
  - platform: sntp
    id: sntp_time

http_request:
  ### OPENWEATHERMAP
  useragent: esphome/device
  timeout: 10s
  id: http_request_data
  
sensor:
  ### DHT11 sensor ################################
  - platform: dht
    pin:
      number: D4
      mode:
        pullup: true
        input: true
    temperature:
      name: "DHT Temperature"
      id: dht_temperature
    humidity:
      name: "DHT Humidity"
      id: dht_humidity
    model: DHT11
    update_interval: 15s

  ### BMP180
  - platform: bmp085
    # address: 0x77
    temperature:
      name: "Internal Temperature"
      id: "internal_temperature"
    pressure:
      name: "Internal Pressure"
      id: "internal_pressure"
    update_interval: 60s

  ### OPENWEATHERMAP
  - platform: template
    name: "Weather Temperature"
    id: weather_temperature

text_sensor:
  ### OPENWEATHERMAP
  - platform: template
    name: "Weather Condition"
    id: weather_condition

interval:
  ### DUMMY Hello World
  - interval: 10s
    then:
      - logger.log: "Hello World"
  ### DISPLAY PAGING
  - interval: 5s
    then:
      - display.page.show_next: my_display
      - component.update: my_display
  ### OPENWEATHERMAP
  - interval: 1min
    then:
      - http_request.get:
          url: http://api.openweathermap.org/data/2.5/onecall?lat=47.5&lon=19.0&appid=APPID_COMES_HERE&lang=en&units=metric&exclude=minutely,hourly,daily,alerts
          on_response:
            then:
              - lambda: |-
                  json::parse_json(id(http_request_data).get_string(), [](JsonObject doc) {
                    //-- Because ArduinoJson implements the Null Object Pattern, it is always safe to read the object: if the key doesn’t exist, it returns an empty value.
                    auto current = doc["current"];

                    float tempf = current["temp"];
                    id(weather_temperature).publish_state(tempf);

                    const char* weatherdesc = current["weather"][0]["description"];
                    if (weatherdesc) id(weather_condition).publish_state(weatherdesc);
                  });

### OLED display ################################

display:
  - platform: ssd1306_i2c
    id: my_display
    model: "SSD1306 64x48"
    reset_pin: D0
    address: 0x3C
    pages:
      - id: page_helloworld
        lambda: |-
          it.printf(0, 12, id(font12), "Hello world");
      - id: page_inside
        lambda: |-
          if (id(sntp_time).now().is_valid()) it.strftime(0, 0, id(font12bold), TextAlign::LEFT, "%H:%M:%S", id(sntp_time).now());
          it.printf(0, 12, id(font12), TextAlign::LEFT, "%.1f hPa", id(internal_pressure).state);
          it.printf(0, 24, id(font12), TextAlign::LEFT, "%.1f°C  %.0f%%", id(internal_temperature).state, id(dht_humidity).state);
          it.image(0, 48-12, id(logo_slh_dshop));

image:
  - file: logo_slh_dshop.png
    id: logo_slh_dshop
    # resize: 64x12
    type: BINARY

font:
  - id: font12
    file: "../fonts/regupix_.ttf"
    size: 10
    glyphs: >-
      !"'`%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzáÁéÉíÍóÓöÖőŐúÚüÜűŰ
  - id: font12bold
    file: "../fonts/regupixb.ttf"
    size: 10
    glyphs: >-
      !"'`%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzáÁéÉíÍóÓöÖőŐúÚüÜűŰ
